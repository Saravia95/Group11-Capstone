generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id @db.Uuid
  email         String?       @unique
  first_name    String?
  last_name     String?
  display_name  String?
  created_at    DateTime      @default(now())
  request_songs RequestSong[]
  subscription  Subscription?

  @@map("users")
}

model RequestSong {
  id          Int      @id @default(autoincrement())
  customer_id String   @db.Uuid
  song_id     String
  song_title  String
  artist_name String
  cover_image String
  play_time   String
  owner_id    String   @db.Uuid
  status      String   @default("pending")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [owner_id], references: [id], onDelete: Cascade)

  @@index([owner_id, created_at])
  @@map("request_songs")
}

model Subscription {
  id                         String    @id @default(uuid()) @db.Uuid
  start_date                 DateTime? @default(now())
  renewal_date               DateTime?
  user_id                    String    @unique @db.Uuid
  billing_rate               Int?      @default(0)
  membership_status          Boolean?  @default(false)
  stripe_customer_id         String?   @default("")
  stripe_subscription_id     String?   @default("")
  stripe_subscription_status String?   @default("inactive")
  user                       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("subscriptions")
}
