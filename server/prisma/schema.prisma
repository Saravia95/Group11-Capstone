// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String     @id @db.Uuid
  email            String?    @unique
  first_name       String?
  last_name        String?     
  display_name     String?
  created_at       DateTime   @default(now())
  subscription     Subscription?
  request_songs    RequestSong[]

  @@map("users")
}

model RequestSong {
  id           Int      @id @default(autoincrement())
  customer_id String    @db.Uuid
  song_id      String
  song_title   String
  artist_name  String
  cover_image  String
  play_time    String
  user         User     @relation(fields: [owner_id], references: [id])
  owner_id      String  @db.Uuid
  status       String   @default("pending")   // pending, approved, rejected
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("request_songs")
  @@index([owner_id])
}

model Subscription {
  id                            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date                    DateTime?   @default(now())                   
  renewal_date                  DateTime?   @updatedAt
  user                          User        @relation(fields: [user_id], references: [id])                   
  user_id                       String      @unique @db.Uuid                     
  billing_rate                  Int?        @default(0)                        
  membership_status             Boolean?    @default(false)                   
  stripe_customer_id            String?     @default("")                       
  stripe_subscription_id        String?     @default("")     
  stripe_subscription_status    String?     @default("inactive")     // active, inactive

  @@map("subscriptions") 
  @@index([user_id])   
}
