// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @db.Uuid
  email     String    @unique

  @@map("user")
}

model RequestSong {
  id          Int      @id @default(autoincrement())
  song_id      String
  song_title   String
  artist_name  String
  cover_image  String
  play_time    String
  user_id      String
  owner_id     String
  status      String   @default("pending") // pending, approved, rejected
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("request_song")
  @@index([owner_id])
}

model Subscription {
  id                     String   @id @default(uuid()) // Unique identifier for the subscription
  start_date             DateTime? // Optional start date (can be null)
  renewal_date           DateTime? // Optional renewal date (can be null)
  user_id                String   // Reference to the user
  billing_rate           Int      // Integer to store billing rate
  membership_status      Boolean  // Boolean to indicate membership status (active or inactive)
  stripe_customer_id     String   // Stripe Customer ID
  stripe_subscription_id String?  // Stripe Subscription ID (can be null)
  stripe_subscription_status String // Stripe Subscription Status.

  @@map("subscriptions") // Map the model to the "subscriptions" table in the database
  @@index([user_id]) // Index for fast lookup by user_id
}
